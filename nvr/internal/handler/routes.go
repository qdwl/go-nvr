// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	user "github.com/qdwl/go-nvr/nvr/internal/handler/user"
	"github.com/qdwl/go-nvr/nvr/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/role/add",
				Handler: user.UserRoleAddHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/user/role/:id",
				Handler: user.UserRoleDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/role/update",
				Handler: user.UserRoleUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/role/list",
				Handler: user.UserRoleListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/info/add",
				Handler: user.UserInfoAddHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/user/info/:id",
				Handler: user.UserInfoDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/info/update",
				Handler: user.UserInfoUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/info/list",
				Handler: user.UserInfoListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)
}
